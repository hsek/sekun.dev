<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>flakes on sekun's blog</title><link>https://blog.sekun.dev/tags/flakes/</link><description>Recent content in flakes on sekun's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Oct 2022 12:31:00 +0000</lastBuildDate><atom:link href="https://blog.sekun.dev/tags/flakes/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage Secrets in NixOS</title><link>https://blog.sekun.dev/posts/manage-secrets-in-nixos/</link><pubDate>Thu, 27 Oct 2022 12:31:00 +0000</pubDate><guid>https://blog.sekun.dev/posts/manage-secrets-in-nixos/</guid><description>Recently, I experimented with running NixOS on a DigitalOcean droplet (which I will probably write about in the future), and migrated some of my toy projects from App Platform. During the migration process, I realized that I would have to somehow handle the DB certificate, and other sensitive credentials. I can&amp;rsquo;t just hardcode these!
One of the more popular projects for problems like this is agenix. Their README for how to use it was a bit confusing (for me) so hopefully this post will be of use to others.</description></item></channel></rss>