<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>docker on sekun's blog</title><link>https://blog.sekun.dev/tags/docker/</link><description>Recent content in docker on sekun's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Apr 2021 06:20:00 +0000</lastBuildDate><atom:link href="https://blog.sekun.dev/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Create static Rust binaries, and Docker images with Nix</title><link>https://blog.sekun.dev/posts/create-static-binaries-and-docker-images-with-nix/</link><pubDate>Sun, 11 Apr 2021 06:20:00 +0000</pubDate><guid>https://blog.sekun.dev/posts/create-static-binaries-and-docker-images-with-nix/</guid><description>Introduction A few days ago, I released the abomination of a project called emojied (website, repo) to the world. It went great, I&amp;rsquo;m glad people found it funny. However, I&amp;rsquo;m not too pleased with the deployment process: from building the project to shipping it. I made heavy use of Docker to build the necessary static assets, and the static binary.
Here&amp;rsquo;s the current setup:
Dev environment PostgreSQL (handled by NixOS) rustc, openssl, cargo, etc.</description></item></channel></rss>