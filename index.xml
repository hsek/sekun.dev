<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>sekun's blog</title><link>https://blog.sekun.dev/</link><description>Recent content on sekun's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Apr 2021 06:20:00 +0000</lastBuildDate><atom:link href="https://blog.sekun.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>What I learned from building an emoji URL shortener in Rust</title><link>https://blog.sekun.dev/posts/what-i-learned-from-building-a-rust-emoji-url-shortener/</link><pubDate>Sun, 11 Apr 2021 06:20:00 +0000</pubDate><guid>https://blog.sekun.dev/posts/what-i-learned-from-building-a-rust-emoji-url-shortener/</guid><description>So, I made an emoji URL shortener with Rust and shared it in some places including the Rust community. And oh man this is the first thing I made that got this many visitors which is pretty nice knowing that people were curious enough to try it despite them probably feeling disgusted from me bringing such a thing to existence.
Repo: https://github.com/sekunho/emojied Website: https://emojied.net Some glowing âœ¨ reviews:</description></item><item><title>Packaging Pre-built Binaries with Nix Flake</title><link>https://blog.sekun.dev/posts/packaging-prebuilt-binaries-with-nix/</link><pubDate>Sat, 06 Mar 2021 04:11:00 +0000</pubDate><guid>https://blog.sekun.dev/posts/packaging-prebuilt-binaries-with-nix/</guid><description>Here&amp;rsquo;s the scenario: You have a nix environment all set up with all the dependencies you need for working on your next awesome project. All but one. nixpkgs doesn&amp;rsquo;t have the version you want. Fortunately, there&amp;rsquo;s a static binary file on their GitHub page. So should you just manually download it every time you set your project up, or should you write a Nix package that builds it from source?</description></item></channel></rss>